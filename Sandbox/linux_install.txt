
----------------------------------ooOOOOoo---------------------------------------

libpcap:

Solution:
Install libpcap-dev package. libpcap install fails,

sudo apt-get install libpcap-dev
....
user@ubuntu:/$ whereis pcap
pcap: /usr/include/pcap.h /usr/include/pcap /usr/share/man/man3/pcap.3pcap.gz


Issue:
user@ubuntu:~/gDocuments/code/C-Snippets/Sandbox$ gcc -o ldev ldev.c -lpcap
ldev.c:12:46: fatal error: pcap.h: No such file or directory

user@ubuntu:~/gDocuments/code/C-Snippets/Sandbox$ whereis pcap.h
pcap:

user@ubuntu:/$ sudo apt-get libpcap
[sudo] password for user: 
E: Invalid operation libpcap


----------------------------------ooOOOOoo---------------------------------------

pcap_open_live:

unable to cpature as non root user.

Solution:

Do the following as root

Add a capture group and add yourself to it

groupadd pcap
usermod -a -G pcap user
Next, change the group of tcpdump and set permissions

chgrp pcap /usr/sbin/tcpdump
chmod 750 /usr/sbin/tcpdump
Finally, use setcap to give tcpdump the necessary permissions

setcap cap_net_raw,cap_net_admin=eip /usr/sbin/tcpdump
Be careful, that this will allow everybody from the group pcap to manipulate network interfaces and read raw packets!


http://askubuntu.com/questions/530920/tcpdump-permissions-problem

More details from

http://peternixon.net/news/2012/01/28/configure-tcpdump-work-non-root-user-opensuse-using-file-system-capabilities/

Issue:

DEV: eno16777736
pcap_open_live(): eno16777736: You don't have permission to capture on that device (socket: Operation not permitted)


----------------------------------ooOOOOoo---------------------------------------

wireshark:
sudo apt-get install wireshark
sudo groupadd wireshark
sudo usermod -a -G wireshark YOUR_USER_NAME
sudo chgrp wireshark /usr/bin/dumpcap
sudo chmod 750 /usr/bin/dumpcap
sudo setcap cap_net_raw,cap_net_admin=eip /usr/bin/dumpcap
sudo getcap /usr/bin/dumpcap

https://ask.wireshark.org/questions/16343/install-wireshark-on-ubuntu


----------------------------------ooOOOOoo---------------------------------------
----------------------------------ooOOOOoo---------------------------------------

git:

Unable to push after two factor authentication enabled.

http://stackoverflow.com/questions/17659206/git-push-results-in-authentication-failed

If you enabled two-factor authentication in your Github account you won't be able to push via HTTPS using your accounts password. Instead you need to generate a personal access token. This can be done in the application settings of your Github account. Using this token as your password should allow you to push to your remote repository via HTTPS. Use your username as usual.
https://help.github.com/articles/https-cloning-errors#provide-access-token-if-2fa-enabled

You may also need to update the origin for your repository if set to https:

git remote -v 
git remote remove origin 
// Did not work : git remote add origin git@github.com:user/repo.git  

you can also do git remote add origin https://username:access-token@github.com/username/repo.git to store your personal access token. 

// Did not work: https://help.github.com/articles/caching-your-github-password-in-git/

git remote set-url origin https://github.com/zkirkland/Random-Python-Tests.git
This one works. But after wards you need to add 
git push --set-upstream origin master

may have to do git pull origin master 

try git branch and git pull commands to see if they are fine and test with git remote -v


